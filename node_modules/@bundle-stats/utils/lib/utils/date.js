"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatTime = exports.formatDate = exports.formatDateTime = void 0;
const isDate_1 = __importDefault(require("lodash/isDate"));
const getNavigatorLanguages = () => (typeof window !== 'undefined' && typeof window.navigator !== 'undefined' && window.navigator.languages) || 'en';
const getResultAsString = (value) => {
    if ((0, isDate_1.default)(value)) {
        return value.toString();
    }
    if (typeof value === 'number') {
        return value.toString();
    }
    return value || '';
};
const formatDateTime = (formatterOptions, value) => {
    let date;
    let result = '';
    if (!value) {
        return result;
    }
    if ((0, isDate_1.default)(value)) {
        date = value;
    }
    else {
        try {
            date = new Date(value);
        }
        catch (err) {
            return getResultAsString(value);
        }
    }
    const formatter = new Intl.DateTimeFormat(getNavigatorLanguages(), formatterOptions);
    try {
        result = formatter.format(date);
    }
    catch (err) {
        return getResultAsString(value);
    }
    return result;
};
exports.formatDateTime = formatDateTime;
const formatDate = (value) => (0, exports.formatDateTime)({
    day: '2-digit',
    month: '2-digit',
    year: 'numeric',
}, value);
exports.formatDate = formatDate;
const formatTime = (value) => (0, exports.formatDateTime)({
    ...(process.env.NODE_ENV !== 'test' && {
        hour: '2-digit',
    }),
    minute: '2-digit',
    second: '2-digit',
}, value);
exports.formatTime = formatTime;
//# sourceMappingURL=date.js.map