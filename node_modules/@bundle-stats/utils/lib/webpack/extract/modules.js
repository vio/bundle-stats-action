"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractModules = void 0;
const isEmpty_1 = __importDefault(require("lodash/isEmpty"));
const utils_1 = require("../utils");
const extractModules = (webpackStats) => {
    const modulesSource = (webpackStats === null || webpackStats === void 0 ? void 0 : webpackStats.modules) || [];
    if (!modulesSource) {
        return { metrics: { modules: {} } };
    }
    const allModules = modulesSource.reduce((agg, moduleEntry) => {
        if (!moduleEntry.modules) {
            agg.push(moduleEntry);
            return agg;
        }
        agg = agg.concat(moduleEntry.modules.map((concatenatedModule) => ({
            ...concatenatedModule,
            chunks: moduleEntry.chunks,
        })));
        return agg;
    }, []);
    const modules = allModules.reduce((agg, moduleEntry) => {
        const { name, size, chunks } = moduleEntry;
        const normalizedName = (0, utils_1.getModuleName)(name);
        if ((0, isEmpty_1.default)(chunks)) {
            return agg;
        }
        agg[normalizedName] = {
            name,
            value: size,
            chunkIds: chunks.map(utils_1.normalizeChunkId),
        };
        return agg;
    }, {});
    return { metrics: { modules } };
};
exports.extractModules = extractModules;
//# sourceMappingURL=modules.js.map