"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Loader = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _loaderModule = _interopRequireDefault(require("./loader.module.css"));

var _excluded = ["className", "size"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Loader = function Loader(_ref) {
  var className = _ref.className,
      size = _ref.size,
      restProps = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/_react["default"].createElement("span", _extends({
    className: (0, _classnames["default"])(_loaderModule["default"].root, className, _loaderModule["default"][size])
  }, restProps));
};

exports.Loader = Loader;
Loader.SIZE_SMALL = 'small';
Loader.SIZE_MEDIUM = 'medium';
Loader.SIZE_LARGE = 'large';
Loader.SIZES = [Loader.SIZE_SMALL, Loader.SIZE_MEDIUM, Loader.SIZE_LARGE];
Loader.defaultProps = {
  className: '',
  size: Loader.SIZE_MEDIUM
};
Loader.propTypes = {
  /** Adopted child class name */
  className: _propTypes["default"].string,

  /** Size modifier */
  size: _propTypes["default"].oneOf(Loader.SIZES)
};