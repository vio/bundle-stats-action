"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _utils = require("@bundle-stats/utils");

var _webpackStatsBaseline = _interopRequireDefault(require("../../../__mocks__/webpack-stats.baseline.json"));

var _webpackStatsCurrent = _interopRequireDefault(require("../../../__mocks__/webpack-stats.current.json"));

var _stories = require("../../stories");

var _ = require(".");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// Limit the side of the modules when not in dev mode (chromatic limit, snapshot too large)
var _ref = process.env.NODE_ENV !== 'development' ? {
  // eslint-disable-next-line prefer-object-spread
  baselineStats: Object.assign({}, _webpackStatsBaseline["default"], {
    modules: _webpackStatsBaseline["default"].modules.slice(0, 100)
  }),
  // eslint-disable-next-line prefer-object-spread
  currentStats: Object.assign({}, _webpackStatsCurrent["default"], {
    modules: _webpackStatsCurrent["default"].modules.slice(0, 100)
  })
} : {
  baselineStats: _webpackStatsBaseline["default"],
  currentStats: _webpackStatsCurrent["default"]
},
    baselineStats = _ref.baselineStats,
    currentStats = _ref.currentStats;

var JOBS = (0, _utils.createJobs)([{
  webpack: currentStats
}, {
  webpack: baselineStats
}]);
var stories = (0, _react2.storiesOf)('Components/BundleModules', module);
stories.addDecorator((0, _stories.getWrapperDecorator)());
stories.add('default', function () {
  return /*#__PURE__*/_react["default"].createElement(_.BundleModules, {
    jobs: [JOBS[1]]
  });
});
stories.add('multiple jobs', function () {
  return /*#__PURE__*/_react["default"].createElement(_.BundleModules, {
    jobs: JOBS
  });
});
var JOBS_EMPTY_BASELINE = (0, _utils.createJobs)([{
  webpack: currentStats
}, null]);
stories.add('empty baseline', function () {
  return /*#__PURE__*/_react["default"].createElement(_.BundleModules, {
    jobs: JOBS_EMPTY_BASELINE
  });
}); // Module moved between chunks

var JOBS_MOVED_MODULE = (0, _utils.createJobs)([{
  webpack: {
    chunks: [{
      id: 1,
      names: ['chunk-1']
    }, {
      id: 2,
      names: ['chunk-2']
    }],
    modules: [{
      name: 'module-1a.js',
      size: 1100,
      chunks: [1]
    }, {
      name: 'module-1b.js',
      size: 1200,
      chunks: [1]
    }, {
      name: 'module-moved-from-chunk-2-to-1.js',
      size: 2300,
      chunks: [1]
    }, {
      name: 'module-2b.js',
      size: 2200,
      chunks: [2]
    }, {
      name: 'module-moved-from-chunk-3-to-1.js',
      size: 3300,
      chunks: [1]
    }]
  }
}, {
  webpack: {
    chunks: [{
      id: 1,
      names: ['chunk-1']
    }, {
      id: 2,
      names: ['chunk-2']
    }, {
      id: 3,
      names: ['chunk-3']
    }],
    modules: [{
      name: 'module-1a.js',
      size: 1000,
      chunks: [1]
    }, {
      name: 'module-1b.js',
      size: 1100,
      chunks: [1]
    }, {
      name: 'module-moved-from-chunk-2-to-1.js',
      size: 2000,
      chunks: [2]
    }, {
      name: 'module-2b.js',
      size: 2200,
      chunks: [2]
    }, {
      name: 'module-moved-from-chunk-3-to-1.js',
      size: 3300,
      chunks: [3]
    }, {
      name: 'module-removed-from-all-chunks.js',
      size: 3300,
      chunks: [3]
    }]
  }
}]);
var chunkFiltersStories = (0, _react2.storiesOf)('Components/BundleModules/chunk filters', module);
chunkFiltersStories.addDecorator((0, _stories.getWrapperDecorator)());
chunkFiltersStories.add('chunk with module moved in', function () {
  return /*#__PURE__*/_react["default"].createElement(_.BundleModules, {
    filters: {
      changed: false,
      'c.1': true,
      'c.2': false,
      'c.3': false
    },
    jobs: _toConsumableArray(JOBS_MOVED_MODULE)
  });
});
chunkFiltersStories.add('chunk with module moved out', function () {
  return /*#__PURE__*/_react["default"].createElement(_.BundleModules, {
    filters: {
      changed: false,
      'c.1': false,
      'c.2': true,
      'c.3': false
    },
    jobs: _toConsumableArray(JOBS_MOVED_MODULE)
  });
});
chunkFiltersStories.add('removed chunk', function () {
  return /*#__PURE__*/_react["default"].createElement(_.BundleModules, {
    filters: {
      changed: false,
      'c.1': false,
      'c.2': false,
      'c.3': true
    },
    jobs: _toConsumableArray(JOBS_MOVED_MODULE)
  });
});