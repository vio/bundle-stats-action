import { METRIC_TYPE_FILE_SIZE } from '../config/metrics';
import { compareMetrics } from '../report/compare-metrics';
import { SECTION_WEBPACK_STATS, SECTION_WEBPACK_SIZES, SECTION_WEBPACK_ASSETS, SECTION_WEBPACK_MODULES, SECTION_WEBPACK_PACKAGES, SECTIONS, } from './constants';
import { selectors } from './selectors';
const compareStats = (jobs, rowTransformers) => compareMetrics(jobs, selectors.stats, undefined, rowTransformers);
const compareSizes = (jobs, rowTransformers) => compareMetrics(jobs, selectors.sizes, undefined, rowTransformers);
const compareAssets = (jobs, rowTransformers) => compareMetrics(jobs, selectors.assets, METRIC_TYPE_FILE_SIZE, rowTransformers);
const compareModules = (jobs, rowTransformers) => compareMetrics(jobs, selectors.modules, METRIC_TYPE_FILE_SIZE, rowTransformers);
const comparePackages = (jobs, rowTransformers) => compareMetrics(jobs, selectors.packages, METRIC_TYPE_FILE_SIZE, rowTransformers);
export const compareBySection = {
    [SECTION_WEBPACK_STATS]: compareStats,
    [SECTION_WEBPACK_SIZES]: compareSizes,
    [SECTION_WEBPACK_ASSETS]: compareAssets,
    [SECTION_WEBPACK_MODULES]: compareModules,
    [SECTION_WEBPACK_PACKAGES]: comparePackages,
};
export const compare = (jobs) => SECTIONS.reduce((agg, sectionId) => ({
    ...agg,
    [sectionId]: compareBySection[sectionId](jobs),
}), {});
//# sourceMappingURL=compare.js.map